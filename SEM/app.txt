#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#

library(shiny)
library(shinyAce)
library(piecewiseSEM)
library(nlme)

rawd<-read.csv("www/FINAL_SWEDEN.csv", header=TRUE)

init <- "
big_sweden_mod<-psem(
      lme(humans  ~ time   + habitat1,                              random=~1|name, rawd),
      lme(seed    ~ humans + habitat1,                              random=~1|name, rawd),
      lme(wolf    ~ humans + seed     + habitat1,                   random=~1|name,rawd),
      lme(lynx    ~ humans + seed     + habitat1,                   random=~1|name,rawd),
      lme(red_fox ~ humans + seed     + wolf     + lynx + habitat1, random=~1|name, rawd)
)
"

ui <- fluidPage(
    h1("Shiny SEM Interactive Code"),
    fluidRow(
        column(
            4,
            h2("Source Code"),
            aceEditor("code", mode = "r", height = "200px", value = init),
            actionButton("eval", "Evaluate")
        ),
        column(
            4,
            h2("Output"),
            verbatimTextOutput("outputtext")
        ),
        column(
            4,
            h2("Plot"),
            renderPlot("semplot")
        )
    )
)


# Define server logic required to draw a histogram
server <- function(input, output) {
    
    myvals <- reactive({
        input$eval
        x <- isolate({
            mystuff <- paste(input$code,
                             "summary(big_sweden_mod)")
        })
    })

    myplotvals <- reactive({
        input$eval
        x <- isolate({
            mystuff <- paste(input$code,
                             "plot(big_sweden_mod)")
        })
    })
    
    output$outputtext <- renderPrint({
        eval(parse(text = myvals()))
    })
    
    output$semplot <- renderPlot({
        eval(parse(text = myplotvals()))
    })
    
}


# Run the application 
shinyApp(ui = ui, server = server)
